classdef LOG<kernels.Kernel
    
    properties
        theta
        alpha
    end

    methods

        function obj = LOG(scale,theta)
            obj.scale = scale;
            obj.scales{1} = scale;
            obj.theta = theta;
            obj.thetas{1} = theta;
            obj.kernels{1} = obj;
            obj.w.map = 'none';
            obj.warping{1} = obj.w;
        end


        function [K,dK] = forward(obj,x1,x2,theta)
            
            [nn] = size(x1,);

            nT = length(theta);

            if nargout==1
                d = obj.dist(x1./theta,x2./theta);

                K = log(1 + d + eps)./(d + eps);

            else
                thetaAD = AutoDiff(theta);

                dAD = obj.dist(x1./thetaAD,x2./thetaAD);

                KAD = log(1 + dAD + eps)./(dAD + eps);

                K = getvalue(KAD);
                dK = getderivs(KAD);

                dK = reshape(full(dK),[nn nn nT]),
            end
        end
    end
end